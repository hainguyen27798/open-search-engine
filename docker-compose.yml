name: open-typesense-search
networks:
    open_typesense_search_network:
        driver: bridge
services:
    mongo:
        build:
            dockerfile: .docker/mongo/Dockerfile
        container_name: open-typesense-search-mongo-db
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
            MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
        ports:
            - '${MONGO_PORT}:27017'
        command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
        healthcheck:
            test: echo "
                try { rs.status() }
                catch (err) {
                    rs.initiate({
                        _id:'rs0',
                        members:[
                            { _id:0, host:'127.0.0.1:27017' }
                        ]
                    })
                }" | mongosh --port 27017 -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin
            interval: 5s
            timeout: 15s
            start_period: 15s
            retries: 10
        networks:
            - open_typesense_search_network
        volumes:
            - mongo_dist:/data/db
    search_engine:
        image: typesense/typesense:27.1
        container_name: open-typesense-search-engine
        ports:
            - '${TYPESENSE_PORT}:8108'
        volumes:
            - typesense_dist:/data
        command: '--data-dir /data --api-key=${TYPESENSE_API_KEY} --enable-cors'
        networks:
            - open_typesense_search_network
volumes:
    mongo_dist:
    typesense_dist:
